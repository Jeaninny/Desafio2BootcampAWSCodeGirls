{
  "Comment": "A description of my state machine",
  "StartAt": "Avisa do arquivo",
  "States": {
    "Avisa do arquivo": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Arguments": {
        "MessageBody": "{% $states.input %}"
      },
      "Next": "Verifica arquivo"
    },
    "Verifica arquivo": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Output": "{% $states.result.Payload %}",
      "Arguments": {
        "FunctionName": "",
        "Payload": "{% $states.input %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Next": "Há arquivo?"
    },
    "Há arquivo?": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Processar arquivo",
          "Condition": true,
          "Output": {
            "ValueEnteredInForm": "$.existe == true"
          }
        },
        {
          "Next": "Êxito",
          "Assign": false,
          "Condition": false,
          "Output": {
            "ValueEnteredInForm": "existe == false"
          }
        }
      ]
    },
    "Processar arquivo": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Output": "{% $states.result.Payload %}",
      "Arguments": {
        "FunctionName": "",
        "Payload": "{% $states.input %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Next": "Salvar no Bucket"
    },
    "Salvar no Bucket": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Output": "{% $states.result.Payload %}",
      "Arguments": {
        "FunctionName": "",
        "Payload": "{% $states.input %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Next": "Bucket"
    },
    "Bucket": {
      "Type": "Task",
      "Arguments": {
        "Bucket": "MyData"
      },
      "Resource": "arn:aws:states:::aws-sdk:s3:headBucket",
      "End": true
    },
    "Êxito": {
      "Type": "Succeed"
    }
  },
  "QueryLanguage": "JSONata"
}